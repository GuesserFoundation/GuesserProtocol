{
  "contractName": "RegistrySetter",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "betRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_betRegistry",
          "type": "address"
        }
      ],
      "name": "setBetRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107698061006d6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ff677bf146100935780633f4ba83a146100ea5780635c975abb14610101578063715018a6146101305780638456cb59146101475780638da5cb5b1461015e578063efdb2b46146101b5578063f2fde38b146101f8575b600080fd5b34801561009f57600080fd5b506100a861023b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff610261565b005b34801561010d57600080fd5b5061011661031f565b604051808215151515815260200191505060405180910390f35b34801561013c57600080fd5b50610145610332565b005b34801561015357600080fd5b5061015c610434565b005b34801561016a57600080fd5b506101736104f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c157600080fd5b506101f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610519565b005b34801561020457600080fd5b50610239600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105dc565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102bc57600080fd5b600060149054906101000a900460ff1615156102d757600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561038d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561048f57600080fd5b600060149054906101000a900460ff161515156104ab57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057457600080fd5b600060149054906101000a900460ff1615151561059057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105d9610434565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063757600080fd5b61064081610643565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561067f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058200b22b20443d0e0deee67aa0a904e86f12d6a7e7470b940cb7fe866f3b53ad65a0029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ff677bf146100935780633f4ba83a146100ea5780635c975abb14610101578063715018a6146101305780638456cb59146101475780638da5cb5b1461015e578063efdb2b46146101b5578063f2fde38b146101f8575b600080fd5b34801561009f57600080fd5b506100a861023b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff610261565b005b34801561010d57600080fd5b5061011661031f565b604051808215151515815260200191505060405180910390f35b34801561013c57600080fd5b50610145610332565b005b34801561015357600080fd5b5061015c610434565b005b34801561016a57600080fd5b506101736104f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c157600080fd5b506101f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610519565b005b34801561020457600080fd5b50610239600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105dc565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102bc57600080fd5b600060149054906101000a900460ff1615156102d757600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561038d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561048f57600080fd5b600060149054906101000a900460ff161515156104ab57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057457600080fd5b600060149054906101000a900460ff1615151561059057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105d9610434565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063757600080fd5b61064081610643565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561067f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058200b22b20443d0e0deee67aa0a904e86f12d6a7e7470b940cb7fe866f3b53ad65a0029",
  "sourceMap": "384:423:17:-;;;268:5:19;247:26;;;;;;;;;;;;;;;;;;;;575:10:21;567:5;;:18;;;;;;;;;;;;;;;;;;384:423:17;;;;;;",
  "deployedSourceMap": "384:423:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:30:17;;;;;;;;;;;;;;;;;;;;;;;;;;;838:92:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:19;;;;;;247:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:21;;;;;;666:90:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:19;;;;;;238:20:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:21;;;;;;;;;;;;;;;;;;;;;;;;;;;626:179:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:179:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:30:17;;;;;;;;;;;;;:::o;838:92:19:-;719:5:21;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;568:6:19;;;;;;;;;;;560:15;;;;;;;;900:5;891:6;;:14;;;;;;;;;;;;;;;;;;916:9;;;;;;;;;;838:92::o;247:26::-;;;;;;;;;;;;;:::o;827:111:21:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;666:90:19:-;719:5:21;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;416:6:19;;;;;;;;;;;415:7;407:16;;;;;;;;729:4;720:6;;:13;;;;;;;;;;;;;;;;;;744:7;;;;;;;;;;666:90::o;238:20:21:-;;;;;;;;;;;;;:::o;626:179:17:-;719:5:21;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;416:6:19;;;;;;;;;;;415:7;407:16;;;;;;;;768:12:17;742:11;;:39;;;;;;;;;;;;;;;;;;791:7;:5;:7::i;:::-;626:179;:::o;1100:103:21:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;1338:171::-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "pragma solidity 0.4.24;\n\n// Internal\nimport \"./BetRegistry.sol\";\n// External\nimport \"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\n/**\n * This contract allows the other core contracts to use the functions of the BetRegistry\n *\n * Author: Carlos Gonzalez -- Github: carlosgj94\n */\n/** @title Registry Setter. */\ncontract RegistrySetter is Pausable {\n    using SafeMath for uint;\n\n    BetRegistry public betRegistry;\n\n    /**\n     * @dev Function to add the final Bet Token of the event\n     * @param _betRegistry address Address of the token\n     */\n    function setBetRegistry (address _betRegistry)\n        public\n        onlyOwner\n        whenNotPaused\n    {\n        betRegistry = BetRegistry(_betRegistry);\n        pause();\n    }\n}\n",
  "sourcePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/RegistrySetter.sol",
  "ast": {
    "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/RegistrySetter.sol",
    "exportedSymbols": {
      "RegistrySetter": [
        2787
      ]
    },
    "id": 2788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2757,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/BetRegistry.sol",
        "file": "./BetRegistry.sol",
        "id": 2758,
        "nodeType": "ImportDirective",
        "scope": 2788,
        "sourceUnit": 2217,
        "src": "37:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 2759,
        "nodeType": "ImportDirective",
        "scope": 2788,
        "sourceUnit": 2958,
        "src": "77:64:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2760,
        "nodeType": "ImportDirective",
        "scope": 2788,
        "sourceUnit": 3052,
        "src": "142:59:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2761,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2957,
              "src": "411:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$2957",
                "typeString": "contract Pausable"
              }
            },
            "id": 2762,
            "nodeType": "InheritanceSpecifier",
            "src": "411:8:17"
          }
        ],
        "contractDependencies": [
          2957,
          3137
        ],
        "contractKind": "contract",
        "documentation": "@title Registry Setter. ",
        "fullyImplemented": true,
        "id": 2787,
        "linearizedBaseContracts": [
          2787,
          2957,
          3137
        ],
        "name": "RegistrySetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2765,
            "libraryName": {
              "contractScope": null,
              "id": 2763,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3051,
              "src": "432:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3051",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "426:24:17",
            "typeName": {
              "id": 2764,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "445:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2767,
            "name": "betRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 2787,
            "src": "456:30:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BetRegistry_$2216",
              "typeString": "contract BetRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 2766,
              "name": "BetRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2216,
              "src": "456:11:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BetRegistry_$2216",
                "typeString": "contract BetRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2785,
              "nodeType": "Block",
              "src": "732:73:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2776,
                      "name": "betRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2767,
                      "src": "742:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2216",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2778,
                          "name": "_betRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2769,
                          "src": "768:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2777,
                        "name": "BetRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2216,
                        "src": "756:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BetRegistry_$2216_$",
                          "typeString": "type(contract BetRegistry)"
                        }
                      },
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2216",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "src": "742:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BetRegistry_$2216",
                      "typeString": "contract BetRegistry"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "742:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2782,
                      "name": "pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "791:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "791:7:17"
                }
              ]
            },
            "documentation": "@dev Function to add the final Bet Token of the event\n@param _betRegistry address Address of the token",
            "id": 2786,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3085,
                  "src": "696:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "696:9:17"
              },
              {
                "arguments": null,
                "id": 2774,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2773,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2918,
                  "src": "714:13:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "714:13:17"
              }
            ],
            "name": "setBetRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2769,
                  "name": "_betRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "651:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:22:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:17"
            },
            "scope": 2787,
            "src": "626:179:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2788,
        "src": "384:423:17"
      }
    ],
    "src": "0:808:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/RegistrySetter.sol",
    "exportedSymbols": {
      "RegistrySetter": [
        2787
      ]
    },
    "id": 2788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2757,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/BetRegistry.sol",
        "file": "./BetRegistry.sol",
        "id": 2758,
        "nodeType": "ImportDirective",
        "scope": 2788,
        "sourceUnit": 2217,
        "src": "37:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 2759,
        "nodeType": "ImportDirective",
        "scope": 2788,
        "sourceUnit": 2958,
        "src": "77:64:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2760,
        "nodeType": "ImportDirective",
        "scope": 2788,
        "sourceUnit": 3052,
        "src": "142:59:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2761,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2957,
              "src": "411:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$2957",
                "typeString": "contract Pausable"
              }
            },
            "id": 2762,
            "nodeType": "InheritanceSpecifier",
            "src": "411:8:17"
          }
        ],
        "contractDependencies": [
          2957,
          3137
        ],
        "contractKind": "contract",
        "documentation": "@title Registry Setter. ",
        "fullyImplemented": true,
        "id": 2787,
        "linearizedBaseContracts": [
          2787,
          2957,
          3137
        ],
        "name": "RegistrySetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2765,
            "libraryName": {
              "contractScope": null,
              "id": 2763,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3051,
              "src": "432:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3051",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "426:24:17",
            "typeName": {
              "id": 2764,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "445:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2767,
            "name": "betRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 2787,
            "src": "456:30:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BetRegistry_$2216",
              "typeString": "contract BetRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 2766,
              "name": "BetRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2216,
              "src": "456:11:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BetRegistry_$2216",
                "typeString": "contract BetRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2785,
              "nodeType": "Block",
              "src": "732:73:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2776,
                      "name": "betRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2767,
                      "src": "742:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2216",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2778,
                          "name": "_betRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2769,
                          "src": "768:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2777,
                        "name": "BetRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2216,
                        "src": "756:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BetRegistry_$2216_$",
                          "typeString": "type(contract BetRegistry)"
                        }
                      },
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2216",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "src": "742:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BetRegistry_$2216",
                      "typeString": "contract BetRegistry"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "742:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2782,
                      "name": "pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "791:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "791:7:17"
                }
              ]
            },
            "documentation": "@dev Function to add the final Bet Token of the event\n@param _betRegistry address Address of the token",
            "id": 2786,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3085,
                  "src": "696:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "696:9:17"
              },
              {
                "arguments": null,
                "id": 2774,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2773,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2918,
                  "src": "714:13:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "714:13:17"
              }
            ],
            "name": "setBetRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2769,
                  "name": "_betRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "651:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:22:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:17"
            },
            "scope": 2787,
            "src": "626:179:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2788,
        "src": "384:423:17"
      }
    ],
    "src": "0:808:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-17T08:48:03.755Z"
}