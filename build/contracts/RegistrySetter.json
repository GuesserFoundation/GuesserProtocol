{
  "contractName": "RegistrySetter",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3f4ba83a"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5c975abb"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event",
      "signature": "0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event",
      "signature": "0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event",
      "signature": "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_betRegistry",
          "type": "address"
        }
      ],
      "name": "setBetRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xefdb2b46"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "betRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1ff677bf"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061076e8061006d6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ff677bf146100935780633f4ba83a146100ea5780635c975abb14610101578063715018a6146101305780638456cb59146101475780638da5cb5b1461015e578063efdb2b46146101b5578063f2fde38b146101f8575b600080fd5b34801561009f57600080fd5b506100a861023b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff610265565b005b34801561010d57600080fd5b50610116610323565b604051808215151515815260200191505060405180910390f35b34801561013c57600080fd5b50610145610336565b005b34801561015357600080fd5b5061015c610438565b005b34801561016a57600080fd5b506101736104f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c157600080fd5b506101f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061051d565b005b34801561020457600080fd5b50610239600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e1565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c057600080fd5b600060149054906101000a900460ff1615156102db57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561039157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561049357600080fd5b600060149054906101000a900460ff161515156104af57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060001515600060149054906101000a900460ff16151514156105de576105dd610438565b5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063c57600080fd5b61064581610648565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561068457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820889f2ffa98e5d77b5de8b1f883f2cb12769c263cc8137014a2cc69685d6052e90029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ff677bf146100935780633f4ba83a146100ea5780635c975abb14610101578063715018a6146101305780638456cb59146101475780638da5cb5b1461015e578063efdb2b46146101b5578063f2fde38b146101f8575b600080fd5b34801561009f57600080fd5b506100a861023b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff610265565b005b34801561010d57600080fd5b50610116610323565b604051808215151515815260200191505060405180910390f35b34801561013c57600080fd5b50610145610336565b005b34801561015357600080fd5b5061015c610438565b005b34801561016a57600080fd5b506101736104f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c157600080fd5b506101f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061051d565b005b34801561020457600080fd5b50610239600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e1565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c057600080fd5b600060149054906101000a900460ff1615156102db57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561039157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561049357600080fd5b600060149054906101000a900460ff161515156104af57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060001515600060149054906101000a900460ff16151514156105de576105dd610438565b5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063c57600080fd5b61064581610648565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561068457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820889f2ffa98e5d77b5de8b1f883f2cb12769c263cc8137014a2cc69685d6052e90029",
  "sourceMap": "385:689:22:-;;;268:5:26;247:26;;;;;;;;;;;;;;;;;;;;575:10:28;567:5;;:18;;;;;;;;;;;;;;;;;;385:689:22;;;;;;",
  "deployedSourceMap": "385:689:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:126:22;;;;;;;;;;;;;;;;;;;;;;;;;;;838:92:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:26;;;;;;247:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:26;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:28;;;;;;666:90:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:26;;;;;;238:20:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:28;;;;;;;;;;;;;;;;;;;;;;;;;;;627:202:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;627:202:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:126:22;1015:7;1053:11;;;;;;;;;;;1038:27;;946:126;:::o;838:92:26:-;719:5:28;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;568:6:26;;;;;;;;;;;560:15;;;;;;;;900:5;891:6;;:14;;;;;;;;;;;;;;;;;;916:9;;;;;;;;;;838:92::o;247:26::-;;;;;;;;;;;;;:::o;827:111:28:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;666:90:26:-;719:5:28;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;416:6:26;;;;;;;;;;;415:7;407:16;;;;;;;;729:4;720:6;;:13;;;;;;;;;;;;;;;;;;744:7;;;;;;;;;;666:90::o;238:20:28:-;;;;;;;;;;;;;:::o;627:202:22:-;719:5:28;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;747:12:22;721:11;;:39;;;;;;;;;;;;;;;;;;784:5;774:15;;:6;;;;;;;;;;;:15;;;770:53;;;805:7;:5;:7::i;:::-;770:53;627:202;:::o;1100:103:28:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;1338:171::-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "pragma solidity ^0.4.24;\n\n// Internal\nimport \"./BetRegistry.sol\";\n// External\nimport \"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\n/**\n * This contract allows the other core contracts to use the functions of the BetRegistry\n *\n * Author: Carlos Gonzalez -- Github: carlosgj94\n */\n/** @title Registry Setter. */\ncontract RegistrySetter is Pausable {\n    using SafeMath for uint;\n\n    BetRegistry public betRegistry;\n\n    /**\n     * @dev Function to add the final Bet Token of the event\n     * @param _betRegistry address Address of the token\n     */\n    function setBetRegistry (address _betRegistry)\n        public\n        onlyOwner\n    {\n        betRegistry = BetRegistry(_betRegistry);\n        if (paused == false) {\n            pause();\n        }\n    }\n\n    /**\n     * @dev Function that returns the address of the betRegistry setted\n     * @return address\n     */\n    function betRegistry ()\n        public\n        view\n        returns (address)\n    {\n        return address(betRegistry);\n    }\n}\n",
  "sourcePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/RegistrySetter.sol",
  "ast": {
    "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/RegistrySetter.sol",
    "exportedSymbols": {
      "RegistrySetter": [
        3329
      ]
    },
    "id": 3330,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3286,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/BetRegistry.sol",
        "file": "./BetRegistry.sol",
        "id": 3287,
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 2258,
        "src": "38:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 3288,
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 3550,
        "src": "78:64:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 3289,
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 3644,
        "src": "143:59:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3290,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3549,
              "src": "412:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$3549",
                "typeString": "contract Pausable"
              }
            },
            "id": 3291,
            "nodeType": "InheritanceSpecifier",
            "src": "412:8:22"
          }
        ],
        "contractDependencies": [
          3549,
          3729
        ],
        "contractKind": "contract",
        "documentation": "@title Registry Setter. ",
        "fullyImplemented": true,
        "id": 3329,
        "linearizedBaseContracts": [
          3329,
          3549,
          3729
        ],
        "name": "RegistrySetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3294,
            "libraryName": {
              "contractScope": null,
              "id": 3292,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3643,
              "src": "433:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3643",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "427:24:22",
            "typeName": {
              "id": 3293,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "446:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3296,
            "name": "betRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 3329,
            "src": "457:30:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BetRegistry_$2257",
              "typeString": "contract BetRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 3295,
              "name": "BetRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2257,
              "src": "457:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BetRegistry_$2257",
                "typeString": "contract BetRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3317,
              "nodeType": "Block",
              "src": "711:118:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3303,
                      "name": "betRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3296
                      ],
                      "referencedDeclaration": 3296,
                      "src": "721:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2257",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3305,
                          "name": "_betRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3298,
                          "src": "747:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3304,
                        "name": "BetRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "735:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BetRegistry_$2257_$",
                          "typeString": "type(contract BetRegistry)"
                        }
                      },
                      "id": 3306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "735:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2257",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "src": "721:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BetRegistry_$2257",
                      "typeString": "contract BetRegistry"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "721:39:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3309,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "774:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "784:5:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "774:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3316,
                  "nodeType": "IfStatement",
                  "src": "770:53:22",
                  "trueBody": {
                    "id": 3315,
                    "nodeType": "Block",
                    "src": "791:32:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3312,
                            "name": "pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3533,
                            "src": "805:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "805:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3314,
                        "nodeType": "ExpressionStatement",
                        "src": "805:7:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Function to add the final Bet Token of the event\n@param _betRegistry address Address of the token",
            "id": 3318,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3301,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3300,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3677,
                  "src": "697:9:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "697:9:22"
              }
            ],
            "name": "setBetRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3298,
                  "name": "_betRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 3318,
                  "src": "652:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "651:22:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:22"
            },
            "scope": 3329,
            "src": "627:202:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3327,
              "nodeType": "Block",
              "src": "1028:44:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3324,
                        "name": "betRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          3296
                        ],
                        "referencedDeclaration": 3296,
                        "src": "1053:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BetRegistry_$2257",
                          "typeString": "contract BetRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BetRegistry_$2257",
                          "typeString": "contract BetRegistry"
                        }
                      ],
                      "id": 3323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1045:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3322,
                  "id": 3326,
                  "nodeType": "Return",
                  "src": "1038:27:22"
                }
              ]
            },
            "documentation": "@dev Function that returns the address of the betRegistry setted\n@return address",
            "id": 3328,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "betRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3321,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3328,
                  "src": "1015:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:9:22"
            },
            "scope": 3329,
            "src": "946:126:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3330,
        "src": "385:689:22"
      }
    ],
    "src": "0:1075:22"
  },
  "legacyAST": {
    "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/RegistrySetter.sol",
    "exportedSymbols": {
      "RegistrySetter": [
        3329
      ]
    },
    "id": 3330,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3286,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "/Users/carlosgonzalezjuarez/Documents/Development/GuesserProtocol/contracts/BetRegistry.sol",
        "file": "./BetRegistry.sol",
        "id": 3287,
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 2258,
        "src": "38:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 3288,
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 3550,
        "src": "78:64:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 3289,
        "nodeType": "ImportDirective",
        "scope": 3330,
        "sourceUnit": 3644,
        "src": "143:59:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3290,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3549,
              "src": "412:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$3549",
                "typeString": "contract Pausable"
              }
            },
            "id": 3291,
            "nodeType": "InheritanceSpecifier",
            "src": "412:8:22"
          }
        ],
        "contractDependencies": [
          3549,
          3729
        ],
        "contractKind": "contract",
        "documentation": "@title Registry Setter. ",
        "fullyImplemented": true,
        "id": 3329,
        "linearizedBaseContracts": [
          3329,
          3549,
          3729
        ],
        "name": "RegistrySetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3294,
            "libraryName": {
              "contractScope": null,
              "id": 3292,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3643,
              "src": "433:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3643",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "427:24:22",
            "typeName": {
              "id": 3293,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "446:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3296,
            "name": "betRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 3329,
            "src": "457:30:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BetRegistry_$2257",
              "typeString": "contract BetRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 3295,
              "name": "BetRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2257,
              "src": "457:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BetRegistry_$2257",
                "typeString": "contract BetRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3317,
              "nodeType": "Block",
              "src": "711:118:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3303,
                      "name": "betRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3296
                      ],
                      "referencedDeclaration": 3296,
                      "src": "721:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2257",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3305,
                          "name": "_betRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3298,
                          "src": "747:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3304,
                        "name": "BetRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "735:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BetRegistry_$2257_$",
                          "typeString": "type(contract BetRegistry)"
                        }
                      },
                      "id": 3306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "735:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BetRegistry_$2257",
                        "typeString": "contract BetRegistry"
                      }
                    },
                    "src": "721:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BetRegistry_$2257",
                      "typeString": "contract BetRegistry"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "721:39:22"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3309,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "774:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "784:5:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "774:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3316,
                  "nodeType": "IfStatement",
                  "src": "770:53:22",
                  "trueBody": {
                    "id": 3315,
                    "nodeType": "Block",
                    "src": "791:32:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3312,
                            "name": "pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3533,
                            "src": "805:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "805:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3314,
                        "nodeType": "ExpressionStatement",
                        "src": "805:7:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Function to add the final Bet Token of the event\n@param _betRegistry address Address of the token",
            "id": 3318,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3301,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3300,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3677,
                  "src": "697:9:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "697:9:22"
              }
            ],
            "name": "setBetRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3298,
                  "name": "_betRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 3318,
                  "src": "652:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "651:22:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:22"
            },
            "scope": 3329,
            "src": "627:202:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3327,
              "nodeType": "Block",
              "src": "1028:44:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3324,
                        "name": "betRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          3296
                        ],
                        "referencedDeclaration": 3296,
                        "src": "1053:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BetRegistry_$2257",
                          "typeString": "contract BetRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BetRegistry_$2257",
                          "typeString": "contract BetRegistry"
                        }
                      ],
                      "id": 3323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1045:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3322,
                  "id": 3326,
                  "nodeType": "Return",
                  "src": "1038:27:22"
                }
              ]
            },
            "documentation": "@dev Function that returns the address of the betRegistry setted\n@return address",
            "id": 3328,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "betRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3321,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3328,
                  "src": "1015:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:9:22"
            },
            "scope": 3329,
            "src": "946:126:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3330,
        "src": "385:689:22"
      }
    ],
    "src": "0:1075:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "70": {
      "events": {
        "0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625": {
          "anonymous": false,
          "inputs": [],
          "name": "Pause",
          "type": "event"
        },
        "0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33": {
          "anonymous": false,
          "inputs": [],
          "name": "Unpause",
          "type": "event"
        },
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb6667e7efc69b124f1ed6ee1e446bf21afbe3c85",
      "transactionHash": "0x504b25cc3280a159c2faa5b74f7a9e8e730983fdc53fb30fcbf3884724531d61"
    },
    "5777": {
      "events": {
        "0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625": {
          "anonymous": false,
          "inputs": [],
          "name": "Pause",
          "type": "event",
          "signature": "0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625"
        },
        "0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33": {
          "anonymous": false,
          "inputs": [],
          "name": "Unpause",
          "type": "event",
          "signature": "0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33"
        },
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event",
          "signature": "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x4bb71B97C26f5De8D7E337550A60c3f2555C0835",
      "transactionHash": "0x9f1e0e96c9b18dcbb902dedb41552f6d7fbc1333405146e79c6340872741843e"
    }
  },
  "schemaVersion": "3.0.0-beta.1",
  "updatedAt": "2018-11-01T18:08:48.274Z"
}